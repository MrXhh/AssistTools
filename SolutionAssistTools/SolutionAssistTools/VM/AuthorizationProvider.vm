#set($NameSpace=$model.NameSpace)
#set($SolutionName=$model.SolutionName)
#set($EntityName=$model.EntityName)
#set($SolutionTxt=$model.SolutionTxt)
#set($BaseName=$model.SolutionTxt)
using System.Linq;
using Abp.Authorization;
using Abp.Configuration.Startup;
using Abp.Localization;
using Abp.MultiTenancy;

namespace ${SolutionName}.Authorization
{
    /// <summary>
    /// 权限配置都在这里。
    /// 给权限默认设置服务
    /// See <see cref="${EntityName}Permissions" /> for all permission names. ${EntityName}
    ///</summary>
    public class ${EntityName}AuthorizationProvider : AuthorizationProvider
    {
        private readonly bool _isMultiTenancyEnabled;

		public MemberAuthorizationProvider()
		{

		}

        public MemberAuthorizationProvider(bool isMultiTenancyEnabled)
        {
            _isMultiTenancyEnabled = isMultiTenancyEnabled;
        }

        public MemberAuthorizationProvider(IMultiTenancyConfig multiTenancyConfig)
        {
            _isMultiTenancyEnabled = multiTenancyConfig.IsEnabled;
        }

		public override void SetPermissions(IPermissionDefinitionContext context)
		{
			// 在这里配置了Member 的权限。
			var pages = context.GetPermissionOrNull(AppLtmPermissions.Pages) ?? context.CreatePermission(AppLtmPermissions.Pages, L("Pages"));

			var administration = pages.Children.FirstOrDefault(p => p.Name == AppLtmPermissions.Pages_Administration) ?? pages.CreateChildPermission(AppLtmPermissions.Pages_Administration, L("Administration"));

			var permission = administration.CreateChildPermission(MemberPermissions.Node , L("Member"));
			permission.CreateChildPermission(${EntityName}Permissions.Query, L("QueryMember"));
			permission.CreateChildPermission(${EntityName}Permissions.Create, L("CreateMember"));
			permission.CreateChildPermission(${EntityName}Permissions.Edit, L("EditMember"));
			permission.CreateChildPermission(${EntityName}Permissions.Delete, L("DeleteMember"));
			permission.CreateChildPermission(${EntityName}Permissions.BatchDelete, L("BatchDeleteMember"));
			permission.CreateChildPermission(${EntityName}Permissions.ExportExcel, L("ExportToExcel"));

			//// 添加自定义代码开始
									
			
			//// 添加自定义代码 结束
		}

		private static ILocalizableString L(string name)
		{
			return new LocalizableString(name, ${BaseName}Consts.LocalizationSourceName);
		}
    }
}
