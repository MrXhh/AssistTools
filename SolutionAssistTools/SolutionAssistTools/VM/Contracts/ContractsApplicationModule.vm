#set($NameSpace=$model.NameSpace)
#set($SolutionName=$model.SolutionName)
#set($EntityName=$model.EntityName)
#set($SolutionTxt=$model.SolutionTxt)
#set($ProjectName=$model.ProjectName)
#set($ClassName=$model.ClassName)
#set($CoreClassName=$model.CoreClassName)

using System;
using Abp.AutoMapper;
using Abp.Modules;
using Abp.Reflection.Extensions;
using ${SolutionName};
using ${SolutionName}.Authorization;


namespace ${ProjectName}
{

	[DependsOn(
        typeof(${CoreClassName}Module),
        typeof(AbpAutoMapperModule))]
    public class ${ClassName}Module: AbpModule
    {
        public override void PreInitialize()
        {
            // 自定义AutoMapper类型映射
            // 如果没有这一段就把本所有代码复制上去
            Configuration.Modules.AbpAutoMapper().Configurators.Add(configuration =>
            {
                // ....其他代码
                // 只需要复制这一段
                //CompanyDtoAutoMapper.CreateMappings(configuration);
                // ....其他代码
            });
        }

        public override void Initialize()
        {
            var thisAssembly = typeof(${ClassName}Module).GetAssembly();

            IocManager.RegisterAssemblyByConvention(thisAssembly);

            Configuration.Modules.AbpAutoMapper().Configurators.Add(
                // Scan the assembly for classes which inherit from AutoMapper.Profile
                cfg => cfg.AddMaps(thisAssembly)
            );

        }
    }
}